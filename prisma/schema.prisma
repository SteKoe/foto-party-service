generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Invitation {
  invitation_id  String       @id
  guest_id       String
  wedding_id     String
  invitation_key String       @db.VarChar(16)
  order          Int          @default(0)
  Guest          WeddingGuest @relation(fields: [guest_id], references: [guest_id])

  @@unique([wedding_id, invitation_id])
  @@index([guest_id], map: "Invitation_guest_id_fkey")
}

model Wedding {
  wedding_id            String                  @id @default(dbgenerated("(uuid())"))
  name                  String
  date                  DateTime                @default(now())
  GuestChoice           GuestChoice[]
  InvitationGuestOption InvitationGuestOption[]
  WeddingGuest          WeddingGuest[]
}

model WeddingGuest {
  guest_id    String        @id @default(dbgenerated("(uuid())"))
  wedding_id  String
  name        String
  GuestChoice GuestChoice[]
  Invitation  Invitation[]
  Wedding     Wedding       @relation(fields: [wedding_id], references: [wedding_id], onUpdate: NoAction, map: "RsvpAttendee_rsvp_id_fkey")

  @@index([wedding_id], map: "RsvpAttendees_rsvp_id_fkey")
}

model GuestChoice {
  wedding_id            String                @default(dbgenerated("(uuid())"))
  option_id             String
  guest_id              String
  value                 String
  WeddingGuest          WeddingGuest          @relation(fields: [guest_id], references: [guest_id], onUpdate: NoAction, map: "RsvpAttendeeChoice_attendee_id_fkey")
  Wedding               Wedding               @relation(fields: [wedding_id], references: [wedding_id], onUpdate: NoAction, map: "RsvpAttendeeChoice_rsvp_id_fkey")
  InvitationGuestOption InvitationGuestOption @relation(fields: [wedding_id, option_id], references: [wedding_id, option_id], onUpdate: NoAction, map: "RsvpAttendeeChoice_rsvp_id_rsvp_option_id_fkey")

  @@id([wedding_id, option_id, guest_id])
  @@index([guest_id], map: "RsvpAttendeeChoice_attendee_id_fkey")
}

model InvitationGuestOption {
  option_id   String
  wedding_id  String
  type        String
  name        String
  config      String        @default("{}") @db.LongText
  order       Int           @default(0)
  GuestChoice GuestChoice[]
  Wedding     Wedding       @relation(fields: [wedding_id], references: [wedding_id], onUpdate: NoAction, map: "RsvpOption_rsvp_id_fkey")

  @@id([wedding_id, option_id])
}
